apply plugin: 'java'
apply plugin: 'war'

group = 'com.rptools'
version = '1.0.0-SNAPSHOT'

description = """RPTools"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

clean.delete << file('node_modules')
clean.delete << file('out')
clean.delete << file('src/main/webapp/resources/js/bower')

buildscript {
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.0'
        classpath 'com.moowork.gradle:gradle-node-plugin:0.13'
    }
}

apply plugin: 'com.moowork.node'
apply plugin: 'com.bmuschko.tomcat'

repositories {
    mavenCentral()
    mavenLocal()
}
dependencies {
    compile project(':dzlier-collections')
    compile group: 'commons-io', name: 'commons-io', version: '2.2'
    compile group: 'com.github.jsimone', name: 'webapp-runner', version: '8.0.30.2'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.3.1'
    compile group: 'com.google.guava', name: 'guava', version: '18.0'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.5'
    compile group: 'org.apache.velocity', name: 'velocity', version: '1.7'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.8'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.6'
    compile group: 'org.springframework', name: 'spring-context-support', version: '4.2.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-webmvc', version: '4.2.4.RELEASE'
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'

    def tomcatVersion = '7.0.57'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
}

tomcatRun.contextPath = '/'
tomcatRunWar.contextPath = '/'

node {
    version = '0.12.2'
    npmVersion = '2.7.5'
    download = true
}

task npmCacheConfig(type: NpmTask) {
    description = "Configure the NPM cache"
    def npmCacheDir = "${gradle.getGradleUserHomeDir()}/caches/npm"
    outputs.files file(npmCacheDir)
    args = ['config', 'set', 'cache', npmCacheDir]
}

task npmPackages(type: NpmTask, dependsOn: npmCacheConfig) {
    description = "Install Node.js packages"
    args = ['install']
    inputs.files file('package.json')
    outputs.files file('node_modules')
}

task bowerInstall(type: NodeTask) {
    script = file('node_modules/bower/bin/bower')
    args = ["--config.storage.cache=${gradle.getGradleUserHomeDir()}/caches/bower/cache",
            "--config.storage.packages=${gradle.getGradleUserHomeDir()}/caches/bower/packages",
            "--config.storage.registry=${gradle.getGradleUserHomeDir()}/caches/bower/registry",
            'install']
    inputs.files file('bower.json')
    outputs.files file('src/main/webapp/resources/js/bower')
    dependsOn npmPackages
}

task bowerPackages(type: Sync) {
    from 'bower_components'
    into "src/main/webapp/resources/js/bower"
    exclude '**/test/*'
    exclude '**/demo/*'
    include '**/*.html'
    dependsOn bowerInstall
}

processResources.dependsOn bowerPackages

task stage() {
    dependsOn clean, war
}
tasks.stage.doLast() {
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/assetCompile")
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/libs", exclude: "*.war")
}
war.mustRunAfter clean

task copyToLib(type: Copy) {
    into "$buildDir/server"
    from(configurations.compile) {
        include "webapp-runner*"
    }
}

stage.dependsOn(copyToLib)